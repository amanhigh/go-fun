// Code generated by mockery v2.51.1. DO NOT EDIT.

package mocks

import (
	context "context"

	common "github.com/amanhigh/go-fun/models/common"

	mock "github.com/stretchr/testify/mock"
)

// SBIClient is an autogenerated mock type for the SBIClient type
type SBIClient struct {
	mock.Mock
}

type SBIClient_Expecter struct {
	mock *mock.Mock
}

func (_m *SBIClient) EXPECT() *SBIClient_Expecter {
	return &SBIClient_Expecter{mock: &_m.Mock}
}

// FetchExchangeRates provides a mock function with given fields: ctx
func (_m *SBIClient) FetchExchangeRates(ctx context.Context) (string, common.HttpError) {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for FetchExchangeRates")
	}

	var r0 string
	var r1 common.HttpError
	if rf, ok := ret.Get(0).(func(context.Context) (string, common.HttpError)); ok {
		return rf(ctx)
	}
	if rf, ok := ret.Get(0).(func(context.Context) string); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(context.Context) common.HttpError); ok {
		r1 = rf(ctx)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(common.HttpError)
		}
	}

	return r0, r1
}

// SBIClient_FetchExchangeRates_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'FetchExchangeRates'
type SBIClient_FetchExchangeRates_Call struct {
	*mock.Call
}

// FetchExchangeRates is a helper method to define mock.On call
//   - ctx context.Context
func (_e *SBIClient_Expecter) FetchExchangeRates(ctx interface{}) *SBIClient_FetchExchangeRates_Call {
	return &SBIClient_FetchExchangeRates_Call{Call: _e.mock.On("FetchExchangeRates", ctx)}
}

func (_c *SBIClient_FetchExchangeRates_Call) Run(run func(ctx context.Context)) *SBIClient_FetchExchangeRates_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context))
	})
	return _c
}

func (_c *SBIClient_FetchExchangeRates_Call) Return(_a0 string, _a1 common.HttpError) *SBIClient_FetchExchangeRates_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *SBIClient_FetchExchangeRates_Call) RunAndReturn(run func(context.Context) (string, common.HttpError)) *SBIClient_FetchExchangeRates_Call {
	_c.Call.Return(run)
	return _c
}

// NewSBIClient creates a new instance of SBIClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewSBIClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *SBIClient {
	mock := &SBIClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
